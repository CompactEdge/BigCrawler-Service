plugins {
	// id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'org.springframework.boot' version '2.3.8.RELEASE'
	// id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.wizontech'
version = '0.1.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	// maven { url 'https://repo.spring.io/snapshot' } // for spring-security-oauth2-authorization-server:0.1.0-SNAPSHOTREAD
	// maven { url "https://repo.spring.io/milestone" } // for version '1.0.1.M0'
}

ext {
	// https://spring.io/projects/spring-cloud#adding-spring-cloud-to-an-existing-spring-boot-application
	// set('springCloudVersion', "Greenwich.SR1")
	set('springCloudVersion', "Hoxton.SR9")
	// set('springCloudVersion', "2020.0.0")
	set('snippetsDir', file("build/generated"))
}

dependencies {
	// implementation 'org.springframework.security.experimental:spring-security-oauth2-authorization-server:0.1.0-SNAPSHOT'

	// https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_configurations_graph
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' // for banner.txt
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// k8s
	// implementation 'org.springframework.cloud:spring-cloud-kubernetes-config'
	// implementation 'org.springframework.cloud:spring-cloud-kubernetes-discovery'
	// implementation 'org.springframework.cloud:spring-cloud-kubernetes-ribbon'

	// test
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	filter {
		// include specific method in any of the tests
		includeTestsMatching "actuator*"

		// include all tests from package
		includeTestsMatching "com.wizontech.gateway.*"
	}
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

task bootRunDev(dependsOn: bootRun) {
	// dependsOn 'bootRun'
	println "Runs this project as a Spring Boot application with the dev profile"
	bootRun.configure {
		systemProperty "spring.config.location", "./aio/chart/files/bootstrap.yml"
		systemProperty "spring.profiles.active", 'dev'
	}
}
