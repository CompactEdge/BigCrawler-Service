server:
  port: 8083
---
spring:
  profiles: server
  output:
    ansi:
      enabled: always
  devtools:
    add-properties: true
  application:
    name: gateway
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          "[/**]":
            allowedOrigins: "*"
            allowedMethods:
              - GET
      discovery:
        locator:
          enabled: true
      routes:
        - id: service_bus
          uri: http://service-bus.default:7000
          predicates:
            - Path=/kube/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - RewritePath=/kube/(?<segment>/?.*), /api/v1/$\{segment}
        - id: prometheus_query
          uri: http://prometheus-operated.gigamec-monitor:9090
          predicates:
            - Path=/prom/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - AddResponseHeader=Access-Control-Allow-Origin, *
            - RewritePath=/prom/(?<segment>/?.*), /api/v1/query?query=$\{segment}
        - id: prometheus_query_range
          uri: http://prometheus-operated.gigamec-monitor:9090
          predicates:
            - Path=/promr/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - AddResponseHeader=Access-Control-Allow-Origin, *
            - RewritePath=/promr/(?<segment>/?.*), /api/v1/query_range?query=$\{segment}

management:
  endpoint:
    gateway:
      enabled: true
    health:
      enabled: true
      show-details: always
      show-components: always
  endpoints:
    web:
      exposure:
        include: health,gateway


logging:
  level:
    root: info
    org:
      springframework:
        cloud:
          gateway: trace
          loadbalancer: debug
    reactor:
      netty:
        http:
          client: debug
